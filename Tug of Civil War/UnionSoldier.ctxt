#BlueJ class context
comment0.params=
comment0.target=UnionSoldier()
comment0.text=\r\n\ Create\ a\ UnionSolider\ and\ initialize\ its\ two\ images.\r\n
comment1.params=
comment1.target=void\ act()
comment1.text=\r\n\ Act\ -\ do\ whatever\ the\ UnionSoldier\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment10.params=
comment10.target=void\ muzzleFire()
comment10.text=\r\n\ Creates\ muzzle\ flash\ when\ the\ gun\ is\ fired.\r\n
comment11.params=
comment11.target=void\ reinforcements()
comment12.params=
comment12.target=void\ fire()
comment12.text=\r\n\ Fire\ a\ bullet\ if\ the\ gun\ is\ ready.\r\n
comment2.params=
comment2.target=void\ switchImage()
comment2.text=\r\n\ Alternate\ the\ soldiers\ image\ to\ marching.\r\n
comment3.params=
comment3.target=void\ makeReady()
comment3.text=\r\n\ Alternate\ the\ soldiers\ image\ between\ standing\ and\ ready\ to\ fire.\r\n
comment4.params=
comment4.target=void\ checkKeypress()
comment4.text=\r\n\ Check\ whether\ a\ control\ key\ on\ the\ keyboard\ has\ been\ pressed.\r\n\ If\ it\ has,\ react\ accordingly.\r\n
comment5.params=
comment5.target=void\ checkCollision()
comment6.params=
comment6.target=int\ getStability()
comment6.text=\r\n\ Return\ the\ current\ health\ of\ the\ union\ soldier.\r\n\ \r\n
comment7.params=damage
comment7.target=void\ hit(int)
comment7.text=\r\n\ Hit\ this\ Union\ soldier\ dealing\ the\ given\ amount\ of\ damage.\r\n
comment8.params=
comment8.target=void\ breakUp()
comment8.text=\r\n\r\n\ \r\n
comment9.params=
comment9.target=void\ firing()
comment9.text=\r\n\ Alternates\ image\ between\ firing\ and\ not\ firing.\r\n
numComments=13
